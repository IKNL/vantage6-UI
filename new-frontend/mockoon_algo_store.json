{
  "uuid": "ecf4ede1-4965-402f-8476-b8de882be5b3",
  "lastMigration": 27,
  "name": "Algo store",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3002,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "48919c5f-d8d9-46e9-a365-892fe335c224",
      "type": "http",
      "documentation": "Get list of algorithms - maybe need a separate endpoint for approved algorithm to prevent complicated permission checks",
      "method": "get",
      "endpoint": "algorithm",
      "responses": [
        {
          "uuid": "aefe6f6d-cd5b-4457-8f7f-d7cd1cbe1d8e",
          "body": "{ \n  \"data\": [\n    {  \n      \"id\": 1,\n      \"name\": \"Average\"\n    },\n    {  \n      \"id\": 2,\n      \"name\": \"Linear\"\n    }\n  ], \n  \"links\": {\n    \"links\": {\n        \"first\": \"/api/algorithm?page=1\",\n        \"self\": \"/api/algorithm?page=1\",\n        \"previous\": \"/api/algorithm?page=1\",\n        \"next\": \"/api/algorithm?page=1\",\n        \"last\": \"/api/algorithm?page=1\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "- add pagination",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "fd4e6f93-a60c-4e49-b182-d762b57fd95e",
      "type": "http",
      "documentation": "Get an algorithm by its id",
      "method": "get",
      "endpoint": "algorithm/:id",
      "responses": [
        {
          "uuid": "f17b95d1-b089-4a1b-b366-b4933093c4e2",
          "body": "{\n  \"name\": \"average\",\n  \"url\": \"https://harbor2.vantage6.ai/demo/average\",\n  \"status\": \"approved\",\n  \"vantage6-version\": \"4.0\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\",\n  \"documentation\": \"https://docs.my-algorithm.ai\",\n  \"partitioning\": \"horizontal\",\n  \"developers\": [\n    \"Henk\",\n    \"Ingrid\"\n  ],\n  \"reviewers\": [\n    \"Charles Kip\"\n  ],\n  \"functions\": [\n    {\n      \"name\": \"central_average\",\n      \"description\": \"Compute average for a number of parties\",\n      \"is_central\": true,\n      \"databases\": [\n        {\n  \t\t\t\t\"name\": \"first_db\"\n  \t\t\t},\n  \t\t\t{\n  \t\t\t\t\"name\": \"second_db\"\n  \t\t\t}\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"string_arg\",\n          \"type\": \"str\",\n          \"description\": \"Test string argument\"\n        },\n        {\n          \"name\": \"number_arg\",\n          \"type\": \"int\",\n          \"description\": \"Test number argument\"\n        },\n        {\n          \"name\": \"float_arg\",\n          \"type\": \"float\",\n          \"description\": \"Test float argument\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"int\",\n        \"visualize\": \"null\"\n      }\n    },\n    {\n      \"name\": \"partial_average\",\n      \"description\": \"Return the data for one party so that central party can compute final average\",\n      \"is_central\": false,\n      \"databases\": [\n        {\n          \"name\": \"main_db\"\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"local_count\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ],\n  \"select\": [\n    {\n      \"function\": \"calculate_age\",\n      \"description\": \"Calculate age from date of birth\",\n      \"parameters\": [\n        {\n          \"name\": \"input_column\",\n          \"type\": \"column\",\n          \"description\": \"Name of column with birthdates.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"output_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of new column with age\",\n          \"required\": false,\n          \"default\": \"age\"\n        },\n        {\n          \"name\": \"keep_original\",\n          \"type\": \"bool\",\n          \"description\": \"Whether to keep the original column or not\",\n          \"required\": false,\n          \"default\": true\n        },\n        {\n          \"name\": \"reference_date\",\n          \"type\": \"date\",\n          \"description\": \"Date on which the age is calculated\",\n          \"required\": false,\n          \"default\": \"today\"\n        }\n      ]\n    }\n  ],\n  \"filter\": [\n    {\n      \"function\": \"filter_range\",\n      \"description\": \"Filter values between minimum and maximum values\",\n      \"parameters\": [\n        {\n          \"name\": \"column\",\n          \"type\": \"column\",\n          \"description\": \"Column to filter on.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"min\",\n          \"type\": \"float\",\n          \"description\": \"Minimum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"max\",\n          \"type\": \"float\",\n          \"description\": \"Maximum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"include_min\",\n          \"type\": \"bool\",\n          \"description\": \"Include minimum value\",\n          \"required\": false,\n          \"default\": false\n        },\n        {\n          \"name\": \"include_max\",\n          \"type\": \"bool\",\n          \"description\": \"Include maximum value\",\n          \"required\": false,\n          \"default\": false\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "700b4d44-9d59-4fc4-8647-98264eab03be",
      "type": "http",
      "documentation": "Submit an algorithm using git repo link",
      "method": "post",
      "endpoint": "algorithm/code/public",
      "responses": [
        {
          "uuid": "477b403d-b531-4b76-bdfc-8b9f5f21ba4f",
          "body": "{\n  \"name\": \"average\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\", // optional, alternatively update a file in \"code-zip\" field\n  \"documentation\": \"https://docs.my-algorithm.ai\", // \"none\"\n  \"partitioning\": \"horizontal\", // \"vertical\", \"none\" - not sure we need this in the image\n  \"functions\": [\n    {\n      // part of these fields we may already be able to check for automatically...\n      \"name\": \"central_average\",\n      \"is_central\": true, // this is just to help users of the algorithm to discern what type of function they're calling\n      \"databases\": [\n        {\n          \"name\": \"first_db\"\n        }, // this format allows for clarifying which databases should be entered by the user\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"int\",\n        \"visualize\": \"null\"\n      }\n    }, {\n      \"name\": \"partial_average\",\n      \"is_central\": false,\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"local_count\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "5faa5228-a06e-4fed-900d-af6e0154e0b9",
      "type": "http",
      "documentation": "Submit algorithm using existing Docker image or URL to it",
      "method": "post",
      "endpoint": "algorithm/image",
      "responses": [
        {
          "uuid": "ae3d8cf2-1a98-430c-bf78-049862e1f996",
          "body": "{\n  // This endpoint may use all of the same fields as POST /algorithm/code, but all are optional\n  // They are optional only if a metadata file is already in the YAML, otherwise should\n  // return an error which metadata is missing\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7c66e51d-f3f3-4d5b-a6fe-99be3b271b47",
      "type": "http",
      "documentation": "Update metadata on an algorithm - e.g. how often it has been run",
      "method": "patch",
      "endpoint": "algorithm/:id",
      "responses": [
        {
          "uuid": "1848d04f-a435-470a-8f22-e32198d05d14",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7a843f51-883b-4eda-8fae-2d3768df7fd1",
      "type": "http",
      "documentation": "Delete algorithm from the store",
      "method": "delete",
      "endpoint": "algorithm/:id",
      "responses": [
        {
          "uuid": "5ce95243-aee0-4bb1-adbf-ea7f840e1425",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "50f0b51e-e632-4260-a71a-85e5de7eb953",
      "type": "http",
      "documentation": "Approve or reject algorithm under review -> should also be called by store manager",
      "method": "patch",
      "endpoint": "review/:id",
      "responses": [
        {
          "uuid": "93470803-b538-4d47-a7e5-bd28c5db7f5d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "- if last required approval, should automatically add the algorithm to the store",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "dd8e8657-c87f-411c-821f-507053df52ee",
      "type": "http",
      "documentation": "Assign one or more reviewers to a certain algorithm",
      "method": "post",
      "endpoint": "review",
      "responses": [
        {
          "uuid": "597cb2cc-5081-424f-b314-b4373c0c69da",
          "body": "{\n  \"algorithm_id\": 1,\n  \"reviewer_ids\": [\n    1,\n    2\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "b3eb8f43-0cf3-4195-86e5-032c7b6e516f",
      "type": "http",
      "documentation": "Test algorithm build pipeline",
      "method": "post",
      "endpoint": "build/test",
      "responses": [
        {
          "uuid": "f63c1bb9-5f9e-42d4-8c7c-a25b3939740e",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Should return docker image",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "9ee10c14-d54f-44db-849b-289a116d68fd",
      "type": "http",
      "documentation": "Import an algorithm from another algorithm store using GET algorith/:id",
      "method": "post",
      "endpoint": "algorithm/import",
      "responses": [
        {
          "uuid": "b6875894-9762-46c2-ba34-6714bf87211e",
          "body": "{\n  // TODO we need to think about authentication here\n  \"store_url\": \"https://some-algorithm-store.ai\",\n  \"algorithm_id\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "7e402f10-ca32-4315-b982-779d5b39feb1",
      "type": "http",
      "documentation": "List of algorithm reviews - both open and past",
      "method": "get",
      "endpoint": "review",
      "responses": [
        {
          "uuid": "b4e05d95-87de-4f94-a8f9-46d0afc1f450",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "be7d4888-846d-4e85-95d0-49d11915b7a7",
      "type": "http",
      "documentation": "Delete review record (?)",
      "method": "delete",
      "endpoint": "review/:id",
      "responses": [
        {
          "uuid": "a3f021b9-5fe4-4613-a810-5926a147ae6d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "17b60a90-adbc-4515-9fe3-e59d5e0c6e41",
      "type": "crud",
      "documentation": "Servers allowed to access the algorithms",
      "method": "",
      "endpoint": "server",
      "responses": [
        {
          "uuid": "a357b7e8-6518-4da0-960b-93ef5ec2c216",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "f0d289f7-3a5b-48ff-bc14-c4c50a6dd5a7",
      "type": "crud",
      "documentation": "Settings of the algorithm store",
      "method": "",
      "endpoint": "settings",
      "responses": [
        {
          "uuid": "f7906c2e-1a5f-4ff3-9bb0-4a73ebaab1b7",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "a2693ff5-17a0-40ed-bbb6-5bc0dcf6d981",
      "type": "crud",
      "documentation": "Assign or remove permissions to specific users",
      "method": "",
      "endpoint": "permission",
      "responses": [
        {
          "uuid": "edb36810-5748-4ce7-acff-bade0af1790f",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "3faa0b75-d21c-497c-bb86-c9033e3175ee",
      "type": "http",
      "documentation": "Submit an algorithm using code zip",
      "method": "post",
      "endpoint": "algorithm/code/private",
      "responses": [
        {
          "uuid": "ae7f9a0c-9ea9-4e81-a4c3-07f9242fa0ad",
          "body": "{\n  \"name\": \"average\",\n  \"code-zip\": \"algorithm.zip\" // <-- this should be a file\n  \"documentation\": \"https://docs.my-algorithm.ai\", // \"none\"\n  \"partitioning\": \"horizontal\", // \"vertical\", \"none\" - not sure we need this in the image\n  \"functions\": [\n    {\n      // part of these fields we may already be able to check for automatically...\n      \"name\": \"central_average\",\n      \"is_central\": true, // this is just to help users of the algorithm to discern what type of function they're calling\n      \"databases\": [\n        {\n          \"name\": \"first_db\"\n        }, // this format allows for clarifying which databases should be entered by the user\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"int\",\n        \"visualize\": \"null\"\n      }\n    }, {\n      \"name\": \"partial_average\",\n      \"is_central\": false,\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"local_count\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "48919c5f-d8d9-46e9-a365-892fe335c224"
    },
    {
      "type": "route",
      "uuid": "fd4e6f93-a60c-4e49-b182-d762b57fd95e"
    },
    {
      "type": "route",
      "uuid": "7c66e51d-f3f3-4d5b-a6fe-99be3b271b47"
    },
    {
      "type": "route",
      "uuid": "7a843f51-883b-4eda-8fae-2d3768df7fd1"
    },
    {
      "type": "route",
      "uuid": "700b4d44-9d59-4fc4-8647-98264eab03be"
    },
    {
      "type": "route",
      "uuid": "3faa0b75-d21c-497c-bb86-c9033e3175ee"
    },
    {
      "type": "route",
      "uuid": "5faa5228-a06e-4fed-900d-af6e0154e0b9"
    },
    {
      "type": "route",
      "uuid": "9ee10c14-d54f-44db-849b-289a116d68fd"
    },
    {
      "type": "route",
      "uuid": "7e402f10-ca32-4315-b982-779d5b39feb1"
    },
    {
      "type": "route",
      "uuid": "50f0b51e-e632-4260-a71a-85e5de7eb953"
    },
    {
      "type": "route",
      "uuid": "dd8e8657-c87f-411c-821f-507053df52ee"
    },
    {
      "type": "route",
      "uuid": "be7d4888-846d-4e85-95d0-49d11915b7a7"
    },
    {
      "type": "route",
      "uuid": "b3eb8f43-0cf3-4195-86e5-032c7b6e516f"
    },
    {
      "type": "route",
      "uuid": "17b60a90-adbc-4515-9fe3-e59d5e0c6e41"
    },
    {
      "type": "route",
      "uuid": "f0d289f7-3a5b-48ff-bc14-c4c50a6dd5a7"
    },
    {
      "type": "route",
      "uuid": "a2693ff5-17a0-40ed-bbb6-5bc0dcf6d981"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}
