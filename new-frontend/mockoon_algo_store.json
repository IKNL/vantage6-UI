{
  "uuid": "945630a9-8014-401b-845d-3c1e5ed83907",
  "lastMigration": 27,
  "name": "Algo store",
  "endpointPrefix": "",
  "latency": 0,
  "port": 3002,
  "hostname": "",
  "folders": [],
  "routes": [
    {
      "uuid": "0732da52-2a1b-4a9e-8f50-001853d7c6cd",
      "type": "http",
      "documentation": "Get list of algorithms - maybe need a separate endpoint for approved algorithm to prevent complicated permission checks",
      "method": "get",
      "endpoint": "algorithm",
      "responses": [
        {
          "uuid": "35176721-b7e0-45bc-a548-b7662ef076bf",
          "body": "{\n  \"data\": [\n    {\n      \"id\": 1,\n      \"name\": \"Average\",\n      \"url\": \"harbor2.vantage6.ai/demo/average\"\n    },\n    {\n      \"id\": 2,\n      \"name\": \"Quality check\",\n      \"url\": \"harbor2.vantage6.ai/starter/utils\"\n    },\n    {\n      \"id\": 3,\n      \"name\": \"Cross tabulation\",\n      \"url\": \"harbor2.vantage6.ai/starter/crosstab\"\n    },\n    {\n      \"id\": 4,\n      \"name\": \"Kaplan Meier\",\n      \"url\": \"harbor2.vantage6.ai/starter/survfit\"\n    }\n  ],\n  \"links\": {\n    \"links\": {\n      \"first\": \"/api/algorithm?page=1\",\n      \"self\": \"/api/algorithm?page=1\",\n      \"previous\": \"/api/algorithm?page=1\",\n      \"next\": \"/api/algorithm?page=1\",\n      \"last\": \"/api/algorithm?page=1\"\n    }\n  }\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "- add pagination",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "0d6a094b-c41e-4b4e-929a-6651e984b3c5",
      "type": "http",
      "documentation": "Get an algorithm by its id",
      "method": "get",
      "endpoint": "algorithm/:id",
      "responses": [
        {
          "uuid": "069040ad-0e5d-4f11-858a-b9f92b26d76d",
          "body": "{\n  \"name\": \"average\",\n  \"url\": \"harbor2.vantage6.ai/demo/average\",\n  \"status\": \"approved\",\n  \"vantage6-version\": \"4.0\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\",\n  \"documentation\": \"https://docs.my-algorithm.ai\",\n  \"partitioning\": \"horizontal\",\n  \"developers\": [\n    \"Henk\",\n    \"Ingrid\"\n  ],\n  \"reviewers\": [\n    \"Charles Kip\"\n  ],\n  \"functions\": [\n    {\n      \"name\": \"central_average\",\n      \"description\": \"Compute average for a number of parties\",\n      \"is_central\": true,\n      \"databases\": [\n        {\n          \"name\": \"Main database\"\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"column\",\n          \"description\": \"Name of column to compute average over\"\n        }\n      ],\n      \"output\": [{\n        \"type\": \"int\",\n        \"keys\": [\n          \"average\"\n        ],\n        \"title\": \"Some tile\",\n        \"visualize\": \"table\"\n      }]\n    },\n    {\n      \"name\": \"partial_average\",\n      \"description\": \"Return the data for one party so that central party can compute final average\",\n      \"is_central\": false,\n      \"databases\": [\n        {\n          \"name\": \"Main database\"\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": [{\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"count\"\n        ],\n        \"visualize\": \"table\"\n      }]\n    }\n  ],\n  \"select\": [\n    {\n      \"function\": \"calculate_age\",\n      \"description\": \"Calculate age from date of birth\",\n      \"parameters\": [\n        {\n          \"name\": \"input_column\",\n          \"type\": \"column\",\n          \"description\": \"Name of column with birthdates.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"output_column\",\n          \"type\": \"str\",\n          \"description\": \"Name of new column with age\",\n          \"required\": false,\n          \"default\": \"age\"\n        },\n        {\n          \"name\": \"keep_original\",\n          \"type\": \"bool\",\n          \"description\": \"Whether to keep the original column or not\",\n          \"required\": false,\n          \"default\": true\n        },\n        {\n          \"name\": \"reference_date\",\n          \"type\": \"date\",\n          \"description\": \"Date on which the age is calculated\",\n          \"required\": false,\n          \"default\": \"today\"\n        }\n      ]\n    }\n  ],\n  \"filter\": [\n    {\n      \"function\": \"filter_range\",\n      \"description\": \"Filter values between minimum and maximum values\",\n      \"parameters\": [\n        {\n          \"name\": \"column\",\n          \"type\": \"column\",\n          \"description\": \"Name of column to filter on.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"min_\",\n          \"type\": \"float\",\n          \"description\": \"Minimum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"max_\",\n          \"type\": \"float\",\n          \"description\": \"Maximum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"include_min\",\n          \"type\": \"bool\",\n          \"description\": \"Include minimum value\",\n          \"required\": false,\n          \"default\": false\n        },\n        {\n          \"name\": \"include_max\",\n          \"type\": \"bool\",\n          \"description\": \"Include maximum value\",\n          \"required\": false,\n          \"default\": false\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "e8e2c5ed-c476-4e91-92b5-9760a90e89f7",
      "type": "http",
      "documentation": "Submit an algorithm using git repo link",
      "method": "post",
      "endpoint": "algorithm/code/public",
      "responses": [
        {
          "uuid": "d08e8a8e-557d-4736-ac5e-6396fcc0d6db",
          "body": "{\n  \"name\": \"average\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\", // optional, alternatively update a file in \"code-zip\" field\n  \"documentation\": \"https://docs.my-algorithm.ai\", // \"none\"\n  \"partitioning\": \"horizontal\", // \"vertical\", \"none\" - not sure we need this in the image\n  \"functions\": [\n    {\n      // part of these fields we may already be able to check for automatically...\n      \"name\": \"central_average\",\n      \"is_central\": true, // this is just to help users of the algorithm to discern what type of function they're calling\n      \"databases\": [\n        {\n          \"name\": \"first_db\"\n        }, // this format allows for clarifying which databases should be entered by the user\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"int\",\n        \"visualize\": \"null\"\n      }\n    }, {\n      \"name\": \"partial_average\",\n      \"is_central\": false,\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"local_count\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "39dfda6f-0c30-4c2e-8a6f-7a9ce2efc30c",
      "type": "http",
      "documentation": "Submit algorithm using existing Docker image or URL to it",
      "method": "post",
      "endpoint": "algorithm/image",
      "responses": [
        {
          "uuid": "2dae8c3e-8f07-4d91-84b9-a1e7bc91e011",
          "body": "{\n  // This endpoint may use all of the same fields as POST /algorithm/code, but all are optional\n  // They are optional only if a metadata file is already in the YAML, otherwise should\n  // return an error which metadata is missing\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d83621f8-240d-4623-a77a-b2c0c2dd8f06",
      "type": "http",
      "documentation": "Update metadata on an algorithm - e.g. how often it has been run",
      "method": "patch",
      "endpoint": "algorithm/:id",
      "responses": [
        {
          "uuid": "8cee1cbd-fffb-4a92-a451-5a72dcdff236",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4e39e2be-c7fe-4817-aecf-090405b10f06",
      "type": "http",
      "documentation": "Delete algorithm from the store",
      "method": "delete",
      "endpoint": "algorithm/:id",
      "responses": [
        {
          "uuid": "5b6e5cb0-3c89-44d9-94c2-ae031caa77bd",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "c1588997-56a5-4246-9320-1849253d0952",
      "type": "http",
      "documentation": "Approve or reject algorithm under review -> should also be called by store manager",
      "method": "patch",
      "endpoint": "review/:id",
      "responses": [
        {
          "uuid": "a878a2a1-1e29-4fc5-82f2-6bc4c75587ed",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "- if last required approval, should automatically add the algorithm to the store",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "2cabb16c-9346-441b-bd8f-be9e6e64e17c",
      "type": "http",
      "documentation": "Assign one or more reviewers to a certain algorithm",
      "method": "post",
      "endpoint": "review",
      "responses": [
        {
          "uuid": "2d60c714-d4ad-4c8d-a2f6-29c00e72b068",
          "body": "{\n  \"algorithm_id\": 1,\n  \"reviewer_ids\": [\n    1,\n    2\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "72b6151c-ffd3-4a96-8aaa-5a92b513e1d7",
      "type": "http",
      "documentation": "Test algorithm build pipeline",
      "method": "post",
      "endpoint": "build/test",
      "responses": [
        {
          "uuid": "55b6cbb0-ec04-476d-9640-aebe725b21ff",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "Should return docker image",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "cb0bfbb1-a9b4-4f4c-bed9-b82af1784645",
      "type": "http",
      "documentation": "Import an algorithm from another algorithm store using GET algorith/:id",
      "method": "post",
      "endpoint": "algorithm/import",
      "responses": [
        {
          "uuid": "51648870-24dd-4c90-826b-0d21a900e958",
          "body": "{\n  // TODO we need to think about authentication here\n  \"store_url\": \"https://some-algorithm-store.ai\",\n  \"algorithm_id\": 1\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "ed57a894-79b1-421c-a0c2-e910553085ed",
      "type": "http",
      "documentation": "List of algorithm reviews - both open and past",
      "method": "get",
      "endpoint": "review",
      "responses": [
        {
          "uuid": "d593bac7-04dd-4811-be15-b6805dd13d69",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "4027bf12-cf05-4382-b697-28f67ae75d49",
      "type": "http",
      "documentation": "Delete review record (?)",
      "method": "delete",
      "endpoint": "review/:id",
      "responses": [
        {
          "uuid": "7ccf7923-4382-4832-a409-a60a12e0884c",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "d20b68c4-0a5a-4867-ba9c-d31d2299b5e0",
      "type": "crud",
      "documentation": "Servers allowed to access the algorithms",
      "method": "",
      "endpoint": "server",
      "responses": [
        {
          "uuid": "bf1a9b89-466f-4eaa-a396-7c79f77aac6d",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "aa684ebc-05aa-4c2f-9254-76050eff3661",
      "type": "crud",
      "documentation": "Settings of the algorithm store",
      "method": "",
      "endpoint": "settings",
      "responses": [
        {
          "uuid": "a28ed850-efac-46a8-bfb6-755830ad0e59",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "949856b9-6a8c-45bc-a176-6c028882fe39",
      "type": "crud",
      "documentation": "Assign or remove permissions to specific users",
      "method": "",
      "endpoint": "permission",
      "responses": [
        {
          "uuid": "32a0ca10-c0f3-49ff-9577-8d03ef96825b",
          "body": "{}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "DATABUCKET",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1e4e3236-fe45-480b-8887-e7a8f36e1edc",
      "type": "http",
      "documentation": "Submit an algorithm using code zip",
      "method": "post",
      "endpoint": "algorithm/code/private",
      "responses": [
        {
          "uuid": "dd4647ae-d495-4bbf-8e21-62912881f0df",
          "body": "{\n  \"name\": \"average\",\n  \"code-zip\": \"algorithm.zip\" // <-- this should be a file\n  \"documentation\": \"https://docs.my-algorithm.ai\", // \"none\"\n  \"partitioning\": \"horizontal\", // \"vertical\", \"none\" - not sure we need this in the image\n  \"functions\": [\n    {\n      // part of these fields we may already be able to check for automatically...\n      \"name\": \"central_average\",\n      \"is_central\": true, // this is just to help users of the algorithm to discern what type of function they're calling\n      \"databases\": [\n        {\n          \"name\": \"first_db\"\n        }, // this format allows for clarifying which databases should be entered by the user\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"int\",\n        \"visualize\": \"null\"\n      }\n    }, {\n      \"name\": \"partial_average\",\n      \"is_central\": false,\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"local_count\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 201,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "99f8debd-1765-4dec-a361-8d7e0d01fa9a",
      "type": "http",
      "documentation": "Get an algorithm by its id",
      "method": "get",
      "endpoint": "algorithm/2",
      "responses": [
        {
          "uuid": "4c289a09-55ae-49a0-a8b2-b801d1ae7ef7",
          "body": "{\n  \"name\": \"Quality check\",\n  \"url\": \"harbor2.vantage6.ai/starter/utils\",\n  \"status\": \"approved\",\n  \"vantage6-version\": \"4.0\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\",\n  \"documentation\": \"https://docs.my-algorithm.ai\",\n  \"partitioning\": \"horizontal\",\n  \"developers\": [\n    \"Henk\",\n    \"Ingrid\"\n  ],\n  \"reviewers\": [\n    \"Charles Kip\"\n  ],\n  \"functions\": [\n    {\n      \"name\": \"fetch_static_file\",\n      \"description\": \"Recover quality check files\",\n      \"is_central\": false,\n      \"databases\": [],\n      \"arguments\": [\n        {\n          \"name\": \"file_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the quality check file(s) to recover\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"average\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ],\n  \"select\": [\n    {\n      \"function\": \"calculate_age\",\n      \"description\": \"Calculate age from date of birth\",\n      \"parameters\": [\n        {\n          \"name\": \"input_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of column with birthdates.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"output_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of new column with age\",\n          \"required\": false,\n          \"default\": \"age\"\n        },\n        {\n          \"name\": \"keep_original\",\n          \"type\": \"bool\",\n          \"description\": \"Whether to keep the original column or not\",\n          \"required\": false,\n          \"default\": true\n        },\n        {\n          \"name\": \"reference_date\",\n          \"type\": \"date\",\n          \"description\": \"Date on which the age is calculated\",\n          \"required\": false,\n          \"default\": \"today\"\n        }\n      ]\n    }\n  ],\n  \"filter\": [\n    {\n      \"function\": \"filter_range\",\n      \"description\": \"Filter values between minimum and maximum values\",\n      \"parameters\": [\n        {\n          \"name\": \"column\",\n          \"type\": \"string\",\n          \"description\": \"Name of column to filter on.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"min_\",\n          \"type\": \"float\",\n          \"description\": \"Minimum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"max_\",\n          \"type\": \"float\",\n          \"description\": \"Maximum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"include_min\",\n          \"type\": \"bool\",\n          \"description\": \"Include minimum value\",\n          \"required\": false,\n          \"default\": false\n        },\n        {\n          \"name\": \"include_max\",\n          \"type\": \"bool\",\n          \"description\": \"Include maximum value\",\n          \"required\": false,\n          \"default\": false\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "1b5f1fd3-c49f-49e8-a7bb-9e0a277a214e",
      "type": "http",
      "documentation": "Get an algorithm by its id",
      "method": "get",
      "endpoint": "algorithm/3",
      "responses": [
        {
          "uuid": "ccac2852-aa93-4633-b5ce-eaf6a788a3f0",
          "body": "{\n  \"name\": \"Cross tabulation\",\n  \"url\": \"harbor2.vantage6.ai/starter/crosstab\",\n  \"status\": \"approved\",\n  \"vantage6-version\": \"4.0\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\",\n  \"documentation\": \"https://docs.my-algorithm.ai\",\n  \"partitioning\": \"horizontal\",\n  \"developers\": [\n    \"Henk\",\n    \"Ingrid\"\n  ],\n  \"reviewers\": [\n    \"Charles Kip\"\n  ],\n  \"functions\": [\n    {\n      \"name\": \"dct\",\n      \"description\": \"Create a data cross tabulation\",\n      \"is_central\": true,\n      \"databases\": [\n        {\n          \"name\": \"Main database\"\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"group_by_columns\",\n          \"type\": \"column\",\n          \"description\": \"Columns to group by before algorithm\"\n        },\n        {\n          \"name\": \"organizations_to_include\",\n          \"type\": \"list\",\n          \"description\": \"List of organizations to include in the computation\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"average\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ],\n  \"select\": [\n    {\n      \"function\": \"calculate_age\",\n      \"description\": \"Calculate age from date of birth\",\n      \"parameters\": [\n        {\n          \"name\": \"input_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of column with birthdates.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"output_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of new column with age\",\n          \"required\": false,\n          \"default\": \"age\"\n        },\n        {\n          \"name\": \"keep_original\",\n          \"type\": \"bool\",\n          \"description\": \"Whether to keep the original column or not\",\n          \"required\": false,\n          \"default\": true\n        },\n        {\n          \"name\": \"reference_date\",\n          \"type\": \"date\",\n          \"description\": \"Date on which the age is calculated\",\n          \"required\": false,\n          \"default\": \"today\"\n        }\n      ]\n    }\n  ],\n  \"filter\": [\n    {\n      \"function\": \"filter_range\",\n      \"description\": \"Filter values between minimum and maximum values\",\n      \"parameters\": [\n        {\n          \"name\": \"column\",\n          \"type\": \"string\",\n          \"description\": \"Name of column to filter on.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"min_\",\n          \"type\": \"float\",\n          \"description\": \"Minimum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"max_\",\n          \"type\": \"float\",\n          \"description\": \"Maximum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"include_min\",\n          \"type\": \"bool\",\n          \"description\": \"Include minimum value\",\n          \"required\": false,\n          \"default\": false\n        },\n        {\n          \"name\": \"include_max\",\n          \"type\": \"bool\",\n          \"description\": \"Include maximum value\",\n          \"required\": false,\n          \"default\": false\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    },
    {
      "uuid": "51ba400e-da10-49ef-a16d-d170875605c7",
      "type": "http",
      "documentation": "Get an algorithm by its id",
      "method": "get",
      "endpoint": "algorithm/4",
      "responses": [
        {
          "uuid": "6594c509-d17a-48bf-82cd-b702b9392c8b",
          "body": "{\n  \"name\": \"average\",\n  \"url\": \"harbor2.vantage6.ai/starter/survfit\",\n  \"status\": \"approved\",\n  \"vantage6-version\": \"4.0\",\n  \"code-repositoy\": \"https://github.com/IKNL/v6-average-py.git\",\n  \"documentation\": \"https://docs.my-algorithm.ai\",\n  \"partitioning\": \"horizontal\",\n  \"developers\": [\n    \"Henk\",\n    \"Ingrid\"\n  ],\n  \"reviewers\": [\n    \"Charles Kip\"\n  ],\n  \"functions\": [\n    {\n      \"name\": \"dsurvfit\",\n      \"description\": \"Compute Kaplan-Meier curve\",\n      \"is_central\": true,\n      \"databases\": [\n        {\n          \"name\": \"Main database\"\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"time_column\",\n          \"type\": \"column\",\n          \"description\": \"Name of time column\"\n        },\n        {\n          \"name\": \"event_column\",\n          \"type\": \"column\",\n          \"description\": \"Name of column with the event\"\n        },\n        {\n          \"name\": \"stratifier_column\",\n          \"type\": \"column\",\n          \"description\": \"Name of column to stratify\"\n        },\n        {\n          \"name\": \"conf.int\",\n          \"type\": \"number\",\n          \"description\": \"Confidence interval\",\n          \"required\": false,\n          \"default\": 0.95\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"average\"\n        ],\n        \"visualize\": \"table\"\n      }\n    },\n    {\n      \"name\": \"partial_average\",\n      \"description\": \"Return the data for one party so that central party can compute final average\",\n      \"is_central\": false,\n      \"databases\": [\n        {\n          \"name\": \"Main database\"\n        }\n      ],\n      \"arguments\": [\n        {\n          \"name\": \"column_name\",\n          \"type\": \"str\",\n          \"description\": \"Name of the column to calculate average for\"\n        }\n      ],\n      \"output\": {\n        \"type\": \"dict\",\n        \"keys\": [\n          \"sum\",\n          \"local_count\"\n        ],\n        \"visualize\": \"table\"\n      }\n    }\n  ],\n  \"select\": [\n    {\n      \"function\": \"calculate_age\",\n      \"description\": \"Calculate age from date of birth\",\n      \"parameters\": [\n        {\n          \"name\": \"input_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of column with birthdates.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"output_column\",\n          \"type\": \"string\",\n          \"description\": \"Name of new column with age\",\n          \"required\": false,\n          \"default\": \"age\"\n        },\n        {\n          \"name\": \"keep_original\",\n          \"type\": \"bool\",\n          \"description\": \"Whether to keep the original column or not\",\n          \"required\": false,\n          \"default\": true\n        },\n        {\n          \"name\": \"reference_date\",\n          \"type\": \"date\",\n          \"description\": \"Date on which the age is calculated\",\n          \"required\": false,\n          \"default\": \"today\"\n        }\n      ]\n    }\n  ],\n  \"filter\": [\n    {\n      \"function\": \"filter_range\",\n      \"description\": \"Filter values between minimum and maximum values\",\n      \"parameters\": [\n        {\n          \"name\": \"column\",\n          \"type\": \"string\",\n          \"description\": \"Name of column to filter on.\",\n          \"required\": true\n        },\n        {\n          \"name\": \"min_\",\n          \"type\": \"float\",\n          \"description\": \"Minimum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"max_\",\n          \"type\": \"float\",\n          \"description\": \"Maximum value\",\n          \"required\": false\n        },\n        {\n          \"name\": \"include_min\",\n          \"type\": \"bool\",\n          \"description\": \"Include minimum value\",\n          \"required\": false,\n          \"default\": false\n        },\n        {\n          \"name\": \"include_max\",\n          \"type\": \"bool\",\n          \"description\": \"Include maximum value\",\n          \"required\": false,\n          \"default\": false\n        }\n      ]\n    }\n  ]\n}",
          "latency": 0,
          "statusCode": 200,
          "label": "",
          "headers": [],
          "bodyType": "INLINE",
          "filePath": "",
          "databucketID": "",
          "sendFileAsBody": false,
          "rules": [],
          "rulesOperator": "OR",
          "disableTemplating": false,
          "fallbackTo404": false,
          "default": true
        }
      ],
      "enabled": true,
      "responseMode": null
    }
  ],
  "rootChildren": [
    {
      "type": "route",
      "uuid": "0732da52-2a1b-4a9e-8f50-001853d7c6cd"
    },
    {
      "type": "route",
      "uuid": "99f8debd-1765-4dec-a361-8d7e0d01fa9a"
    },
    {
      "type": "route",
      "uuid": "1b5f1fd3-c49f-49e8-a7bb-9e0a277a214e"
    },
    {
      "type": "route",
      "uuid": "51ba400e-da10-49ef-a16d-d170875605c7"
    },
    {
      "type": "route",
      "uuid": "0d6a094b-c41e-4b4e-929a-6651e984b3c5"
    },
    {
      "type": "route",
      "uuid": "d83621f8-240d-4623-a77a-b2c0c2dd8f06"
    },
    {
      "type": "route",
      "uuid": "4e39e2be-c7fe-4817-aecf-090405b10f06"
    },
    {
      "type": "route",
      "uuid": "e8e2c5ed-c476-4e91-92b5-9760a90e89f7"
    },
    {
      "type": "route",
      "uuid": "1e4e3236-fe45-480b-8887-e7a8f36e1edc"
    },
    {
      "type": "route",
      "uuid": "39dfda6f-0c30-4c2e-8a6f-7a9ce2efc30c"
    },
    {
      "type": "route",
      "uuid": "cb0bfbb1-a9b4-4f4c-bed9-b82af1784645"
    },
    {
      "type": "route",
      "uuid": "ed57a894-79b1-421c-a0c2-e910553085ed"
    },
    {
      "type": "route",
      "uuid": "c1588997-56a5-4246-9320-1849253d0952"
    },
    {
      "type": "route",
      "uuid": "2cabb16c-9346-441b-bd8f-be9e6e64e17c"
    },
    {
      "type": "route",
      "uuid": "4027bf12-cf05-4382-b697-28f67ae75d49"
    },
    {
      "type": "route",
      "uuid": "72b6151c-ffd3-4a96-8aaa-5a92b513e1d7"
    },
    {
      "type": "route",
      "uuid": "d20b68c4-0a5a-4867-ba9c-d31d2299b5e0"
    },
    {
      "type": "route",
      "uuid": "aa684ebc-05aa-4c2f-9254-76050eff3661"
    },
    {
      "type": "route",
      "uuid": "949856b9-6a8c-45bc-a176-6c028882fe39"
    }
  ],
  "proxyMode": false,
  "proxyHost": "",
  "proxyRemovePrefix": false,
  "tlsOptions": {
    "enabled": false,
    "type": "CERT",
    "pfxPath": "",
    "certPath": "",
    "keyPath": "",
    "caPath": "",
    "passphrase": ""
  },
  "cors": true,
  "headers": [
    {
      "key": "Content-Type",
      "value": "application/json"
    },
    {
      "key": "Access-Control-Allow-Origin",
      "value": "*"
    },
    {
      "key": "Access-Control-Allow-Methods",
      "value": "GET,POST,PUT,PATCH,DELETE,HEAD,OPTIONS"
    },
    {
      "key": "Access-Control-Allow-Headers",
      "value": "Content-Type, Origin, Accept, Authorization, Content-Length, X-Requested-With"
    }
  ],
  "proxyReqHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "proxyResHeaders": [
    {
      "key": "",
      "value": ""
    }
  ],
  "data": []
}